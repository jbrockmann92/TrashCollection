@model TrashCollector.Models.Customer
@{
    ViewData["Title"] = "MapOfPickups";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>MapOfPickups</h1>

<html>
<head>
    <title>Simple Map</title>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <meta name="viewport" content="initial-scale=1.0">
    <meta charset="utf-8">
    <style>
        #map {
            height: 800px;
            width: 1000px;
        }

        html, body {
            height: 100%;
            margin: 0;
            padding: 0;
        }
    </style>
</head>
<body>
    <div id="map"></div>
    <script>
        geocode();
        function geocode() {
            var location = "12 Main St Milwaukee WI"
            axios.get('http://maps.googleapis.com/maps/api/geocode/json', {
                params: {
                    address: location,
                    key: 'AIzaSyAjT5LRVBJHPdAIyvTuaFDx3t55zIPPgSA'
                }
            });

            @*//$thisAddress = model.address;
            //Probably doesn't work. How to get the address from the user selected by LINQ on EmployeesController?
            $thisAddress = @Model.Address.StreetAddress + @Model.Address.City + @Model.Address.ZipCode.ToString();
            //that might work
            $formattedAddr = str_replace(' ', '+', $thisAddress);
            $geocodeFromAddr = file_get_contents('http://maps.googleapis.com/maps/api/geocode/json?address='.$formattedAddr.'&sensor=true_or_false&key=AIzaSyAjT5LRVBJHPdAIyvTuaFDx3t55zIPPgSA');
            $output = json_decode($geocodeFromAddr);*@

            var lat = response.data.results[0].geometry.location.lat;
            var lng = results.data.results[0].geometry.location.lng;
        }

        var map;
        function initMap() {
            //var addressLatLon = https://maps.googleapis.com/maps/api/geocode/json?address=thisAddress&key=AIzaSyAjT5LRVBJHPdAIyvTuaFDx3t55zIPPgSA;
            //Need to take the model's address and get it in the marker variable
            map = new google.maps.Map(document.getElementById('map'), {
                center: { lat: -34.397, lng: 150.644 },
                zoom: 8
            });
            var marker = new google.maps.Marker({ position: { lat: lat, lng: lng }, map: map });
        }
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAjT5LRVBJHPdAIyvTuaFDx3t55zIPPgSA&callback=initMap"
            async defer></script>
</body>
</html>